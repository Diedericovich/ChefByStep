@model RecipeDetailViewModel
<div class="overview">
        <div class="row">
            <div class="col-7">
    <h1>@Model.Title</h1>
                <div class="container">
            <div id="carouselContent" class="carousel slide vertical" data-ride="carousel">
                <div class="carousel-inner" role="listbox">
                    @foreach (var (step, index) in Model.Steps.Select((v, i) => (v, i + 1)))
                    {
                        @if (index == 1)
                        {
                    <div class="carousel-item active  p-4">
                        <h5>Step @index</h5>
                        <p>@step.Instruction</p>
                        <input type="checkbox" value="@step.IsDone" asp-for="@step.IsDone" onclick="(changeToDone(@step.Id))">Step @index
                    </div>
                        }
                        else
                        {
                <div class="carousel-item p-4">
                    <h5>Step @index</h5>
                    <p>@step.Instruction</p>
                    <input type="checkbox" value="@step.IsDone" asp-for="@step.IsDone" onclick="(changeToDone(@step.Id))" >Step @index
                </div>
                        }
                    }
                </div>
                <a class="carousel-control-prev" href="#carouselContent" role="button" data-slide="prev">
                    <span class="carousel-control-prev-icon-" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" href="#carouselContent" role="button" data-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>
        </div>
                @*<div class="wrapper">
                    @foreach (var (step, index) in Model.Steps.Select((v, i) => (v, i + 1)))
                    {
                        <div class="wrap-@index">
                            <input type="radio" id="tab-@index" name="tabs">
                            <label for="tab-@index"><div>Step @index</div><div class="cross"></div></label>
                            <div class="content">
                                @step.Instruction
                            </div>
                        </div>
                    }
                </div>*@
            </div>
            <div class="col-5">
                <div class="row">
                    <img src="@Model.ImageUrl" class="detail-img" />
                </div>
                <h3>Track your progress</h3>
                @foreach (var (step, index) in Model.Steps.Select((v, i) => (v, i + 1)))
                {
                    <div class="row">
                        <div class="align-content-start">
                            <input type="radio" value="@step.IsDone" asp-for="@step.IsDone" id="@step.Id">Step @index
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
<style>

    .wrapper {
        max-width: 600px;
        width: 100%;
    }

    h1 {
        font-size: 2em;
        margin-bottom: 20px;
    }

/*    input {
        display: none;
    }*/

    label {
        display: flex;
        width: 100%;
        height: 50px;
        cursor: pointer;
        border: 3px solid #3E474F;
        user-select: none;
    }

        label div:first-child {
            width: 100%;
            line-height: 45px;
            margin-left: 10px;
            font-size: 1.2em;
        }

    .cross {
        margin-right: 15px;
        margin-top: 3px;
    }

        .cross:before, .cross:after {
            content: '';
            border-top: 2px solid #3E474F;
            width: 15px;
            display: block;
            margin-top: 18px;
            transition: 0.3s;
        }

        .cross:after {
            transform: rotate(90deg);
            margin-top: -2px;
        }

    .content {
        box-sizing: border-box;
        font-size: 0.9em;
        margin: 10px 10px;
        max-height: 0;
        overflow: hidden;
        transition: max-height, .5s;
    }

    input:checked ~ .content {
        max-height: 400px;
        transition: max-height, 1s;
    }

    input:checked ~ label .cross:before {
        transform: rotate(180deg);
    }

    input:checked ~ label .cross:after {
        transform: rotate(0deg);
    }

    .questions {
        margin-top: 20px;
        max-height: 0;
        overflow: hidden;
        transition: max-height, .5s;
    }

        .questions label {
            border: none;
            box-shadow: none;
            margin: 0;
        }

    input:checked ~ .questions {
        max-height: 400px;
        border-bottom: 2px solid #3E474F;
        transition: 1s;
    }

    /*----------tool-tip------------*/

    .tip {
        color: #f03768;
        cursor: help;
        position: relative;
        overflow: visible;
        font-family: monospace;
        font-size: 1.3em;
    }

        .tip:before,
        .tip:after {
            position: absolute;
            opacity: 0;
            z-index: -100;
            transform: translateY(-30%);
            transition: .4s;
        }

        .tip:before {
            content: '';
            border-style: solid;
            border-width: 0.8em 0.5em 0 0.5em;
            border-color: #3E474F transparent transparent transparent;
            transform: translateY(-200%);
            bottom: 90%;
            left: 50%;
        }

        .tip:after {
            content: attr(data-tip);
            background: #3E474F;
            color: white;
            width: 150px;
            padding: 10px;
            font-size: 0.8em;
            bottom: 150%;
            left: -50%;
        }

        .tip:hover:before,
        .tip:hover:after {
            opacity: 1;
            z-index: 100;
            transform: scaleY(1);
        }

</style>
